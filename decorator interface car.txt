 interface Car { 
public void assemble(); 
} 
 class BasicCar implements Car { 
 @Override 
public void assemble() { 
System.out.print("Basic Car."); 
} 
} 
 class CarDecorator implements Car { 
protected Car car; 
public CarDecorator(Car c){ 
this.car=c; 
} 
@Override 
public void assemble() { 
this.car.assemble(); 
} 
} 
class SportsCar extends CarDecorator { 
public SportsCar(Car c) { 
super(c); 
} 
@Override 
public void assemble(){ 
car.assemble(); 
System.out.print(" Adding features of Sports Car."); 
} 
} 
class LuxuryCar extends CarDecorator { 
public LuxuryCar(Car c) { 
super(c); 
} 
public void assemble(){ 
car.assemble(); 
System.out.print(" Adding features of Luxury Car."); 
} 
} 
public class Main { 
public static void main(String[] args) { 
Car s1 = new SportsCar(new BasicCar()); 
s1.assemble(); 
Car s2 = new LuxuryCar(new BasicCar()); 
s2.assemble(); 
} 
} 